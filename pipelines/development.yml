# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest
jobs:
  - job: buildAndPushImageJob
    displayName: Build and push container image

    steps:
    - script: echo Hello, world!
      displayName: 'Run a one-line script'

    - pwsh: |
        $url = "$($env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI)$env:SYSTEM_TEAMPROJECTID/_apis/build/definitions/$($env:SYSTEM_DEFINITIONID)?api-version=4.1-preview"
        Write-Host "URL: $url"
        $pipeline = Invoke-RestMethod -Uri $url -Headers @{
          Authorization = "Bearer $env:AZURE_DEVOPS_EXT_PAT"
        }
        Write-Host "Pipeline = $($pipeline | ConvertTo-Json -Depth 100)"
      env:
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      displayName: 'Use bearer auth token'

    - script: |
        echo %AZURE_DEVOPS_EXT_PAT% > /ui/docker/secrets/npm_token.txt
        env:
          AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      displayName: Create secret file

    - powershell: | 
        Write-Host "This is a script that could use $env:AZURE_DEVOPS_EXT_PAT"
        Write-Host "$env:AZURE_DEVOPS_EXT_PAT = $(System.AccessToken)"
      env:
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken) 
      displayName: 'Powershell'

    - pwsh: |
        Write-Host "pwsh Token = " $env:AZURE_DEVOPS_EXT_PAT
        ./scripts/buildAndPushContainerImage.ps1 `
      env:
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      displayName: Docker build
